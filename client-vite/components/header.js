// export async function renderHeader(selector = '#header') {
//   const container = document.querySelector(selector);
//   console.log(container, 'üòí')
//   if (!container) return;
//   const res = await fetch('/components/Header.html');
//   container.innerHTML = await res.text();
// }
const renderHeaderContent = (
  guestBlock,
  userBlock,
  isAuthPage,
  isMainNoAuth,
  isProfilePage
) => {
  if (isAuthPage) {
    guestBlock.remove();
    userBlock.remove();
  }

  if (isMainNoAuth) {
    userBlock.remove();
  }

  if (!isAuthPage && !isMainNoAuth) {
    guestBlock.remove();
  }
  // if(isProfilePage) {
  //   guestBlock.remove()
  // }
};

const addEventHeaderButtons = (buttonLogout, buttonAuth) => {
  buttonLogout.addEventListener('click', () => {
    localStorage.removeItem('token');
    window.location.href = '/auth.html';
  });
};

const addEventHeaderSearch = (inputEl, onSearchInput) => {
  inputEl.addEventListener('input', (e) => {
    const value = e.target.value.trim();
    const params = new URLSearchParams(window.location.search);
    console.log(params, 'üíï');
    if (value) {
      params.set('q', value);
    } else {
      params.delete('q');
    }

    const newUrl = `${window.location.pathname}?${params.toString()}`;
    history.replaceState(null, '', newUrl);
    onSearchInput?.(value);
  });
};

export async function renderHeader(
  selector = '#header',
  onSearchInput = () => null
) {
  const container = document.querySelector(selector);
  if (!container) return;

  // 1. –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –≤—Å—Ç–∞–≤–ª—è–µ–º HTML
  const res = await fetch('/components/Header.html');
  container.innerHTML = await res.text();

  // 2. –ó–∞—Ö–≤–∞—Ç—ã–≤–∞–µ–º –Ω—É–∂–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
  const form     = container.querySelector('#header-search-form');
  const inputEl  = form.querySelector('input[name="q"]');
  const btnUsers = container.querySelector('#btn-toggle-users');
  const btnPosts = container.querySelector('#btn-toggle-posts');
  const path     = window.location.pathname;

  // 3. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º default-action –Ω–∞ —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É:
  //    ‚Äî –µ—Å–ª–∏ –º—ã –Ω–∞ searchPosts.html, —Ç–æ –∏—â–µ–º —Ç–∞–º,
  //    ‚Äî –∏–Ω–∞—á–µ ‚Äî –≤—Å–µ–≥–¥–∞ –Ω–∞ searchUsers.html
  if (path.endsWith('searchPosts.html')) {
    form.action = 'searchPosts.html';
  } else {
    form.action = 'searchUsers.html';
  }

  // 4. –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–ª–∏ –∫–æ–ª–±—ç–∫ –ø–æ–∏—Å–∫–∞, —Ç–æ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º —Å–∞–±–º–∏—Ç –∏ –≤–≤–æ–¥ ¬´live¬ª
  if (typeof onSearchInput === 'function') {
    addEventHeaderSearch(inputEl, onSearchInput);
  }

  // 5. –ö–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è ¬´–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ / –ü–æ—Å—Ç—ã¬ª
  //    –ø—Ä–∏ –∫–ª–∏–∫–µ –º–µ–Ω—è—é—Ç –∏ —Å—Ç—Ä–∞–Ω–∏—Ü—É, –∏ form.action
  btnUsers.addEventListener('click', () => {
    form.action = 'searchUsers.html';
    window.location.href = `searchUsers.html${location.search}`;
  });
  btnPosts.addEventListener('click', () => {
    form.action = 'searchPosts.html';
    window.location.href = `searchPosts.html${location.search}`;
  });

  // 6. –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ç–∞–±–∞
  btnUsers.classList.toggle(
    'toggle-nav__btn--active',
    path.endsWith('searchUsers.html')
  );
  btnPosts.classList.toggle(
    'toggle-nav__btn--active',
    path.endsWith('searchPosts.html')
  );

  // 2. –ù–∞—Ö–æ–¥–∏–º –±–ª–æ–∫–∏
  const guestBlock = container.querySelector('.guest-actions');
  const userBlock = container.querySelector('.user-actions');
  const buttonLogout = container.querySelector('.guest-actions__logout');
  const buttonAuth = container.querySelector('.guest-actions__auth');
  // const searchElement = document.getElementById("search-auth")



  const isAuthPage = path === '/auth.html' || path === '/registration.html';
  const isMainNoAuth = path === '/mainNoAuth.html'; // –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ !isAuthPage
  const isProfilePage = path === '/profile.html';
  // const isSearchUsers

  if (!guestBlock || !userBlock) {
    return;
  }

  addEventHeaderButtons(buttonLogout, buttonAuth);
  // addEventHeaderSearch(searchElement,onSearchInput);
  renderHeaderContent(
    guestBlock,
    userBlock,
    isAuthPage,
    isMainNoAuth,
    isProfilePage
  );

  // return searchElement;
}
